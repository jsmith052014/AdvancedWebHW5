@model SmithJessicaHW5.Models.Movie

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Home", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Movie</legend>
               
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "col-sm-2 control-label" })
            <div class ="col-sm-10">
                @Html.EditorFor(model => model.Title, new { @class = "form-control" })
            </div>
            <div class="col-sm-offset-2 col-sm-10">
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, new { @class = "col-sm-2 control-label" })
            <div class="editor-field">
                @Html.EditorFor(model => model.Year, new { @class = "form-control" })
             </div>
            <div class="col-sm-offset-2 col-sm-10">
                  @Html.ValidationMessageFor(model => model.Year)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LengthInMinutes, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.LengthInMinutes, new { @class = "form-control" })
           </div>
            <div class="col-sm-offset col-sm-10">
             @Html.ValidationMessageFor(model => model.LengthInMinutes)
            </div>
        </div>

        @{
            var formats = new List<string>() { "Dvd", "Blue Ray", "Cloud", "Computer" };
        }
        
        <div class="form-group">
            @Html.LabelFor(model => model.Format, new {@class = "col-sm-2 control-label"})
            <div class="col-sm-6">
                @Html.DropDownListFor(model => model.Format, new SelectList(formats), new { @class = "form-control"})
            </div>
            <div class="col-sm-offset col-sm-10">
                @Html.ValidationMessageFor(model => model.Format)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, new { @class = "col-sm-2 control-label" })
            <div class ="col-sm-10">
                @Html.EditorFor(model => model.Genre, new { @class = "form-control" })
            </div>
            <div class ="col-sm-offset-2 col-sm-10">
                @Html.ValidationMessageFor(model => model.Genre)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rating, new { @class = "col-sm-2 control-label" })
            <div class ="col-sm-10">
                @Html.EditorFor(model => model.Rating, new { @class = "form-control" })
            </div>
            <div class="col-sm-offset-2 col-sm-10">
                @Html.ValidationMessageFor(model => model.Rating)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsFavorited, new { @class = "col-sm-2 control-label" })
            <div class ="editor-field">
                @Html.EditorFor(model => model.IsFavorited, new { @class = "form-control" })
            </div>
            <div class ="col-sm-offset-2 col-sm-10">
                @Html.ValidationMessageFor(model => model.IsFavorited)
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <input class= "btn btn-primary" type="submit" value="Create" />
            </div>
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
